From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Jake Potrebic <jake.m.potrebic@gmail.com>
Date: Tue, 26 Nov 2024 20:17:08 -0800
Subject: [PATCH] Expose building various registry types directly


diff --git a/src/main/java/io/papermc/paper/registry/data/InlinedBuilderProvider.java b/src/main/java/io/papermc/paper/registry/data/InlinedBuilderProvider.java
new file mode 100644
index 0000000000000000000000000000000000000000..0ae75471b60dc2333deae374596069d0add69e1e
--- /dev/null
+++ b/src/main/java/io/papermc/paper/registry/data/InlinedBuilderProvider.java
@@ -0,0 +1,21 @@
+package io.papermc.paper.registry.data;
+
+import java.util.Optional;
+import java.util.ServiceLoader;
+import java.util.function.Consumer;
+import org.bukkit.inventory.meta.trim.TrimPattern;
+import org.jetbrains.annotations.ApiStatus;
+
+@ApiStatus.Internal
+@ApiStatus.NonExtendable
+public interface InlinedBuilderProvider {
+
+    static InlinedBuilderProvider instance() {
+        class Holder {
+            static final Optional<InlinedBuilderProvider> PROVIDER = ServiceLoader.load(InlinedBuilderProvider.class).findFirst();
+        }
+        return Holder.PROVIDER.orElseThrow();
+    }
+
+    TrimPattern createTrimPattern(Consumer<TrimPatternRegistryEntry.Builder> builderConsumer);
+}
diff --git a/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java b/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java
index db657206c158e755227e8ef8e102a2ee2cc3bf0a..6eb080bcc75dfd300c99d4dd6276b4559a37b293 100644
--- a/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java
+++ b/src/main/java/org/bukkit/inventory/meta/trim/TrimPattern.java
@@ -116,4 +116,10 @@ public interface TrimPattern extends Keyed, Translatable {
     @Override
     org.bukkit.@org.jetbrains.annotations.NotNull NamespacedKey getKey();
     // Paper end - Registry#getKey
+
+    // Paper start - build directly
+    static @NotNull TrimPattern create(final java.util.function.@NotNull Consumer<io.papermc.paper.registry.data.TrimPatternRegistryEntry.Builder> builderConsumer) {
+        return io.papermc.paper.registry.data.InlinedBuilderProvider.instance().createTrimPattern(builderConsumer);
+    }
+    // Paper end - build directly
 }
